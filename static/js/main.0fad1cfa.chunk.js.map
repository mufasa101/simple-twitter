{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/profilePhoto.svg","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","rows","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","src","profile","alt","bio","follower_count","following_count","ProfileBadgeComponent","useState","didLookup","setDidLookup","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","logo","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fad1cfa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0e34dadf.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n  if (csrftoken){\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  \n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\"){\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n  }\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint =  \"/tweets/feed/\"\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint =  \"/tweets/\"\n    if (username){\n        endpoint =  `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) =>{\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction){\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n        \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props){\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n    const handleBackendUpdate = (response, status) =>{\n      if (status === 201){\n        didTweet(response)\n      } else {\n        console.log(response)\n        alert(\"An error occured please try again\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const newVal = textAreaRef.current.value\n      // backend api request\n      apiTweetCreate(newVal, handleBackendUpdate)\n      textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n          <form onSubmit={handleSubmit} className=\"create_tweet_class mb-3\">\n            <textarea ref={textAreaRef} required={true} className='form-control border border-primary' rows='5' name='tweet'>\n            </textarea>\n            <button type='submit' className='btn btn-primary px-4 py-2 my-3'>Click to tweet</button>\n        </form>\n  </div>\n}","import React from 'react'\n\n\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href= `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n      {props.children}\n  </span>\n}\n\n\nexport  function UserDisplay(props){\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}\n\nexport  function UserPicture (props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n</span>\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}\n","export default __webpack_public_path__ + \"static/media/profilePhoto.009c92aa.svg\";","import React from 'react'\nimport numeral from 'numeral'\n\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n  }\n  ","import React, {useEffect, useState} from 'react'\n\nimport {UserDisplay, UserPicture} from './components'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\n// import profilePhoto from '../profile/profilePhoto.svg'\nimport profile from  '../profiles/profilePhoto.svg';\n\nimport {DisplayCount} from './utils'\nimport './Profile.css'\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <div className=\"container portfolio\">\n        <div className=\"bio-info\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"bio-image \">\n                    <img src={profile} alt=\"profile\" />\n                  </div>\t\t\t\n                </div>\n              </div>\t\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bio-content\">\n                <h2 className=\"display-4\">Hello, </h2>\n                <h2 className=\"display-4\">{user.first_name ? \"I'm \" + user.first_name : ''} </h2>\n                <h5 className=\"mt-4 font-weight-normal\">{user.bio}</h5>\n                <h5 className='mt-31 font-weight-normal'>I live in  {user.location} and I really hope that we can be friends</h5>\n              </div>\n              <div className=\"text-left mt-4 border border-primary1 px-4 py-3\">\n              <p><UserDisplay user={user} includeFullName hideLink /></p>\n              <p ><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\n              <p ><DisplayCount>{user.following_count}</DisplayCount> following</p>\n       \n\n            \n             \n        <button className='btn btn-primary d-flex  px-5 py-2' onClick={handleFollowToggle}>{currentVerb}</button>\n        </div>\n            </div>\n          </div>\t\n        </div>\n      </div>\n\n \n    </div> : null\n}\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      }\n    }\n    useEffect(()=>{\n      if (didLookup === false){\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            // console.log(response, status)\n            if (status===200) {\n                setProfile(response)\n                // apiProfileDetail(username, handleBackendLookup)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n        \n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n}\n\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}","import React, { useState } from \"react\";\n\nimport { ActionBtn } from \"./buttons\";\n\nimport { UserDisplay, UserPicture } from \"../profiles\";\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <Tweet isRetweet retweeter={props.retweeter} hideActions className={\" \"} tweet={tweet.parent} />\n  ) : null;\n}\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  className = isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {isRetweet === true && (\n        <div className=\"mb-2\">\n          <span className=\"small text-muted\">\n            Retweet via <UserDisplay user={retweeter} />\n          </span>\n        </div>\n      )}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>\n              <UserDisplay includeFullName user={tweet.user} />\n            </p>\n            <p>{tweet.content}</p>\n\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className=\"btn btn-group px-0\">\n            {actionTweet && hideActions !== true && (\n              <React.Fragment>\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"like\", display: \"Likes\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\n                />\n              </React.Fragment>\n            )}\n            {isDetail === true ? null : (\n              <button className=\"btn btn-outline-primary btn-sm px-4\" onClick={handleLink}>\n                View\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetFeed} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          }\n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet  \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark rounded px-3' \n        key={`${index}-{item.id}`} />\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n  }\n\n\n","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetList} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet  \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark rounded px-3' \n        key={`${index}-{item.id}`} />\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary px-5 py-2'>Load next</button>}\n    </React.Fragment>\n  }\n\n\n","import React, {useEffect, useState}  from 'react'\n\nimport {TweetCreate} from './create'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\nimport {TweetsList} from './list'\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) =>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetsComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) =>{\n      let tempNewTweets = [...newTweets]\n      tempNewTweets.unshift(newTweet)\n      setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n          <TweetsList newTweets={newTweets} {...props} />\n    </div>\n}\n\n\nexport function TweetDetailComponent(props){\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code>Developed by</code> joseph disraeli omenda\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ProfileBadgeComponent } from \"./profiles\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme-2\");\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\");\n\nuserProfileBadgeElements.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}